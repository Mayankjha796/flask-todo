name: Deploy Flask App to AWS ECR

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # - name: Build, tag, and push image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker build  --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
      #     docker tag $ECR_REGISTRY/$ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG::7}
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG::7}

       
      - name: Build, tag, and push Promtail image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build --platform linux/amd64 -t $ECR_REGISTRY/promtail:latest -f promtail/prom-Dockerfile .
          docker tag $ECR_REGISTRY/promtail:latest $ECR_REGISTRY/promtail:${IMAGE_TAG::7}
          docker push $ECR_REGISTRY/promtail:latest
          docker push $ECR_REGISTRY/promtail:${IMAGE_TAG::7}


      # Install Terraform CLI
      # - name: Install Terraform
      #   uses: hashicorp/setup-terraform@v3
      #   with:
      #     terraform_version: 1.6.6

      # # Terraform Init
      # - name: Terraform Init
      #   run: terraform init

      # # Terraform Apply with image_tag variable
      # - name: Terraform Apply (Update ECS Service)
      #   env:
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: terraform apply -auto-approve -var="image_tag=$(echo $GITHUB_SHA | cut -c1-7)"
