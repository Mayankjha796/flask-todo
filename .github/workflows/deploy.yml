name: Deploy Flask App to AWS ECR

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG::7}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG::7}

      - name: Update ECS task definition with new image
        run: |
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)

          # Get the latest task definition JSON
          aws ecs describe-task-definition \
            --task-definition my-task-def \
            --query taskDefinition \
            > task-def.json

          # Remove unwanted fields
          jq 'del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' task-def.json > new-task-def.json

          # Update only the image
          jq --arg IMAGE "123456789012.dkr.ecr.ap-south-1.amazonaws.com/my-repo:$IMAGE_TAG" \
            '.containerDefinitions[0].image = $IMAGE' new-task-def.json > final-task-def.json

          # Register the new task definition
          aws ecs register-task-definition --cli-input-json file://final-task-def.json

          # Update the ECS service to use the new task definition
          aws ecs update-service \
            --cluster my-cluster \
            --service my-service \
            --force-new-deployment

