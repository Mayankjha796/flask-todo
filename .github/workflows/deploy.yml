name: Deploy Flask App to AWS ECR

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # - name: Build, tag, and push image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
      #     docker tag $ECR_REGISTRY/$ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG::7}
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG::7}

      - name: Update ECS task definition with new image
        run: |
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
          TASK_FAMILY="my-flask-app-task"
          CLUSTER_NAME="my-flask-app-cluster"
          SERVICE_NAME="my-flask-app-task-service-8mcd5ejj"

          # Get latest task definition JSON
          TASK_DEF=$(aws ecs describe-task-definition \
            --task-definition $TASK_FAMILY \
            --query 'taskDefinition')

          # Replace only the image in containerDefinitions
          NEW_TASK_DEF=$(echo $TASK_DEF | jq \
            --arg IMAGE "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/my-flask-app:$IMAGE_TAG" \
            '.containerDefinitions[0].image = $IMAGE')

          # Register new revision
          echo $NEW_TASK_DEF > new-task-def.json
          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)

          # Update service to use new revision
          aws ecs update-service \
            --cluster $CLUSTER_NAME \
            --service $SERVICE_NAME \
            --task-definition $NEW_TASK_DEF_ARN


